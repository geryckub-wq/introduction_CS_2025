Мобильные приложения.

программы для смартфонов и планшетов
приложения скачаннные из источников

деляться на три: 

нативные: для конкретной платформы
веб: можно войти в эти мобилити через браузер 
кросспрлатформеннные: opppoce of нативным 

основные платформы для програмирования:

IOS: разработка на языке Swift с использованием Xcode.
Android: разработка на языке Kotlin или Java с использованием Android Studio.
Кроссплатформенные инструменты: React Native (JavaScript), Flutter (Dart).

Основные языки и инструменты:

Языки для нативной разработки:
iOS: Swift, Objective-C.
Android: Kotlin, Java.
Языки для кроссплатформенной разработки:
React Native: JavaScript.
Flutter: Dart.
Инструменты: Xcode, Android Studio, Visual Studio Code.
iOS vs Android

* Нативная разработка для iOS
* Нативная разработка для Аndroid
> Язык Kotlin (или Java).
> Язык Swift.
> Интегрированная среда разработки (IDE): Xcode.
➤Android Studio как основная среда разработки.
> Структура приложения:
контроллеры, вьюшки, модели (MVC).
> Архитектура приложений: MVVM.
> Пример простого приложения: ToDo список.
> Пример простого приложения: создание калькулятора.
Разработка на React Native
Использование JavaScript.
Компоненты для создания UI.
Пример приложения: приложение для списка задач.
Одновременная разработка для iOS и Android.
Разработка на React Native
Использование JavaScript.
Компоненты для создания UI.
Пример приложения: приложение для списка задач.

Одновременная разработка для iOS и Android.
UI/UX для мобильных приложений
UI (Пользовательский интерфейс): как выглядит приложение.
UX (Пользовательский опыт): как пользователь взаимодействует с приложением.
Принципы дизайна: простота, интуитивность, доступность.
Инструменты для дизайна: Figma, Adobe XD.
Работа с сервером и данными
Подключение к API (REST, GraphQL).
Работа с JSON данными.
Локальное хранение данных: SQLite, Core Data.
Пример: получение данных о погоде через АРІ.

Публикация приложений в App Store и Google Play
1. Процесс публикации: регистрация разработчика, подготовка и загрузка приложения.
2. Требования к приложениям: политика безопасности, соответствие стандартам платформы.
3. Монетизация: реклама, встроенные покупки, подписки.

